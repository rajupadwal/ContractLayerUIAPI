{"version":3,"sources":["webpack:///./src/app/master/expencetype-master/expencetype-master.component.css","webpack:///./src/app/master/expencetype-master/expencetype-master.component.html","webpack:///./src/app/master/expencetype-master/expencetype-master.component.ts","webpack:///./src/app/master/expencetype-view/expencetype-view.component.css","webpack:///./src/app/master/expencetype-view/expencetype-view.component.html","webpack:///./src/app/master/expencetype-view/expencetype-view.component.ts","webpack:///./src/app/master/expencetype-view/expencetype.view.module.ts","webpack:///./src/app/master/expencetype-view/expencetype.view.routing.module.ts"],"names":[],"mappings":"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","file":"master-expencetype-view-expencetype-view-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hc3Rlci9leHBlbmNldHlwZS1tYXN0ZXIvZXhwZW5jZXR5cGUtbWFzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"col-sm-12\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <strong>Expence Type Master</strong>\\r\\n      <!--<small>Form</small>-->\\r\\n    </div>\\r\\n    <form [formGroup]=\\\"expencetypeForm\\\" (ngSubmit)=\\\"saveExpenceType()\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <div class=\\\"card-block\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"textarea-input\\\"><strong>ExpenceType No:</strong></label>\\r\\n              <div>\\r\\n                <span class=\\\"ui-float-label\\\">\\r\\n                  <input formControlName=\\\"ExpenceId\\\" type=\\\"text\\\" pInputText id=\\\"expenceid\\\" name=\\\"expenceid\\\" class=\\\"form-control\\\" rows=\\\"3\\\">\\r\\n                </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <div class=\\\"card-block\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"textarea-input\\\"><strong>ExpenceType Name:</strong></label>\\r\\n              <div>\\r\\n                <span class=\\\"ui-float-label\\\">\\r\\n                  <input formControlName=\\\"ExpenceType\\\" type=\\\"text\\\" pInputText id=\\\"expencetype\\\" name=\\\"expencetype\\\" class=\\\"form-control\\\" rows=\\\"3\\\">\\r\\n                </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"input-group-btn\\\" dropdown>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-outline-primary\\\">&nbsp; SUBMIT </button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { APP_CONSTANT } from '../../../config';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from \"@angular/router\";\r\nimport { DialogConfig } from \"src/app/dialog/dialog-config\";\r\nimport { DialogRef } from '../../dialog/dialog-ref';\r\n\r\n@Component({\r\n  selector: 'app-expencetype-master',\r\n  templateUrl: './expencetype-master.component.html',\r\n  styleUrls: ['./expencetype-master.component.css']\r\n})\r\n\r\nexport class ExpencetypeMasterComponent implements OnInit {\r\n\r\n  expencetypeForm: FormGroup;\r\n  public isEditable: boolean = false;\r\n  constructor(private router: Router, private formBuilder: FormBuilder, private http: HttpClient, private config: DialogConfig, public dialog: DialogRef) { }\r\n\r\n  ngOnInit() {\r\n    this.expencetypeForm = this.formBuilder.group({\r\n      ExpenceId: [0],\r\n      ExpenceType: [],\r\n      IsDeleted:[false]\r\n                 \r\n    });\r\n    if (this.config.data)\r\n      this.setDataForEdit();\r\n  }\r\n\r\n  setDataForEdit = () => {\r\n    this.isEditable = true;\r\n    this.expencetypeForm.setValue(this.config.data);\r\n  }\r\n\r\n  saveExpenceType() {\r\n    let httpOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    };\r\n    let expencetype = this.expencetypeForm.value;\r\n\r\n    return this.http.post(this.isEditable ? APP_CONSTANT.EXPENCETYPE_API.EDIT : APP_CONSTANT.EXPENCETYPE_API.ADD, expencetype, httpOptions)\r\n      .subscribe((expencetype) => {\r\n        // login successful if there's a jwt token in the response\r\n        if (expencetype) {\r\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n          this.dialog.close(expencetype);\r\n        }\r\n        return expencetype;\r\n      });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hc3Rlci9leHBlbmNldHlwZS12aWV3L2V4cGVuY2V0eXBlLXZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6\\\"></div>\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\"></div>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"redirectToAddNew()\\\"><i class=\\\"fa fa-plus-circle\\\"></i>&nbsp; Add New </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ag-grid-angular style=\\\"width: 750px; height: 500px;\\\"\\r\\n                 class=\\\"ag-theme-balham\\\"\\r\\n                 [rowData]=\\\"rowData\\\"\\r\\n                 [columnDefs]=\\\"columnDefs\\\">\\r\\n</ag-grid-angular>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { APP_CONSTANT } from '../../../config';\r\nimport { DialogService } from '../../dialog/dialog.service';\r\nimport { ExpencetypeMasterComponent } from '../expencetype-master/expencetype-master.component';\r\nimport { from } from 'rxjs';\r\nimport { ExpencetypeService } from './expencetype.service';\r\n@Component({\r\n  selector: 'app-expencetype-view',\r\n  templateUrl: './expencetype-view.component.html',\r\n  styleUrls: ['./expencetype-view.component.css']\r\n})\r\nexport class ExpencetypeViewComponent implements OnInit {\r\n\r\n  onBtnClick1 = (param) => {\r\n    alert('i am clicked');\r\n    console.log(param);\r\n\r\n  }\r\n\r\n  columnDefs = [\r\n    //{\r\n    //  headerName: 'Button Col 1', 'width': 100,\r\n    //  cellRenderer: 'buttonRenderer',\r\n    //  cellRendererParams: {\r\n    //    onClick: this.onBtnClick1.bind(this),\r\n    //    label: 'Click 1'\r\n    //  }\r\n    //},\r\n\r\n\r\n    {\r\n      headerName: 'Edit', valueFormatter: () => { return 'Edit' }, 'width': 100,\r\n\r\n      cellRenderer: (params) => {\r\n        var newTH = document.createElement('div');\r\n        newTH.innerHTML = '<i class=\"pi pi-pencil\"></i>';\r\n        newTH.onclick = () => {\r\n          const ref = this.dialog.open(ExpencetypeMasterComponent, { data: params.data, modalConfig: { title: 'Add/Edit Expence TYpe Master' } });\r\n          ref.afterClosed.subscribe(result => {\r\n            this.RefreshGrid();\r\n          });\r\n        };\r\n        return newTH;\r\n      },\r\n    },\r\n    {\r\n      headerName: 'Delete', 'width': 100,\r\n\r\n      cellRenderer: (params) => {\r\n        var newTH = document.createElement('div');\r\n        newTH.innerHTML = 'Delete';\r\n        newTH.className = \"pi pi-times\";\r\n        newTH.onclick = () => {\r\n          this.delete(params.data);\r\n\r\n        };\r\n        return newTH;\r\n      },\r\n    },\r\n    {\r\n      headerName: 'Sr.No', headerCheckboxSelection: true,\r\n      headerCheckboxSelectionFilteredOnly: true,\r\n      checkboxSelection: true,\r\n      field: 'ExpenceId', 'width': 150\r\n    },\r\n\r\n    \r\n\r\n    { headerName: 'Expence Type ', field: 'ExpenceType', 'width': 400 }\r\n    \r\n  ];\r\n\r\n  rowData = [\r\n\r\n  ];\r\n\r\n  constructor(private router: Router, private http: HttpClient, private expencetypeservice: ExpencetypeService, public dialog: DialogService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    let httpOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    };\r\n\r\n    return this.http.get(APP_CONSTANT.EXPENCETYPE_API.GETALL, httpOptions)\r\n      .subscribe((expencetype: any) => {\r\n        this.rowData = expencetype;\r\n      });\r\n  }\r\n  redirectToAddNew() {\r\n    const ref = this.dialog.open(ExpencetypeMasterComponent, { modalConfig: { title: 'Add/Edit Expence TYpe Master' } });\r\n    ref.afterClosed.subscribe(result => {\r\n      // this.rowData.push(result); //TODO this should be implemented like this\r\n      this.RefreshGrid();\r\n    });\r\n  }\r\n\r\n  RefreshGrid = () => {\r\n    let httpOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    };\r\n    return this.http.get(APP_CONSTANT.EXPENCETYPE_API.GETALL, httpOptions)\r\n      .subscribe((expencetype: any) => {\r\n        this.rowData = expencetype;\r\n      });\r\n  }\r\n\r\n  delete(expencetype) {\r\n    let httpOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    };\r\n    //let customer = this.customerForm.value;\r\n\r\n\r\n    return this.http.post(APP_CONSTANT.EXPENCETYPE_API.DELETE, expencetype, httpOptions)\r\n      .subscribe((expencetype) => {\r\n        this.RefreshGrid();\r\n      });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule, Input } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { CommonModule } from '@angular/common';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { ValidationBorderModule } from '../../validation-border/validation-border.module';\r\n//import { AutoCompleteModule } from 'primeng';\r\nimport { DialogModule } from '../../dialog/dialog.module';\r\nimport { ExpencetypeMasterComponent } from '../expencetype-master/expencetype-master.component';\r\nimport { ExpencetypeViewComponent } from './expencetype-view.component';\r\nimport { ExpencetypeViewRoutingModule } from './expencetype.view.routing.module';\r\nimport { ExpencetypeService } from './expencetype.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    DialogModule,\r\n    BsDropdownModule.forRoot(),\r\n    AgGridModule.withComponents([]),\r\n    ExpencetypeViewRoutingModule,\r\n    CalendarModule,\r\n    AutoCompleteModule,\r\n    ReactiveFormsModule,\r\n    ValidationBorderModule,\r\n    CommonModule\r\n\r\n  ],\r\n  declarations: [ExpencetypeViewComponent, ExpencetypeMasterComponent],\r\n  providers:[ExpencetypeService]\r\n\r\n})\r\nexport class ExpencetypeViewModule {\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  Routes,\r\n  RouterModule\r\n} from '@angular/router';\r\n\r\n\r\nimport { ExpencetypeMasterComponent } from '../expencetype-master/expencetype-master.component';\r\nimport { ExpencetypeViewComponent } from './expencetype-view.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ExpencetypeViewComponent,\r\n    data: {\r\n      title: 'Expencetye View'\r\n    }\r\n  },\r\n\r\n   {\r\n    path: 'expencetypemaster',\r\n     component: ExpencetypeMasterComponent,\r\n     data: {\r\n       title: 'Expence Type'\r\n     }\r\n   }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ExpencetypeViewRoutingModule { }\r\n"],"sourceRoot":""}